version: 2.1
jobs:
  build:
    docker:
      - image: circleci/php:7.4-node-browsers
    steps:
      - checkout

      - restore_cache:
          key: composer-v2-{{ checksum "backend/composer.lock" }}
      - run:
          working_directory: backend
          command: composer install -n --prefer-dist
      - save_cache:
          key: composer-v2-{{ checksum "backend/composer.lock" }}
          paths:
            - backend/vendor

      - restore_cache:
          key: npm-v2-{{ checksum "backend/package-lock.json" }}
      - run: #pdo drive error 回避
          name: Install PHP extensions
          command: |
            sudo docker-php-ext-install pdo_mysql
            sudo docker-php-ext-enable pdo_mysql
      - run:
          working_directory: backend
          name: npm ci
          # npm ci は実行じに node_modulesディレクトリーを削除してしまうのでなければ実行
          # ある場合はキャッシュがあるということになるので不要になる
          command: |
            if [ ! -d node_modules ]; then
              npm ci
            fi
      - save_cache:
          key: npm-v2-{{ checksum "backend/package-lock.json" }}
          paths:
            - backend/.npm
      - run:
          working_directory: backend
          command: npm run development
      - run:
          working_directory: backend
          name: php test
          command: vendor/bin/phpunit -c ./phpunit_circleci.xml
  deploy:
    docker:
      - image: circleci/php:7.4-node-browsers
    steps:
      - add_ssh_keys
      - run:
          name: deploy
          # StrictHostKeyChecking=no は 初めてつなげるSSHに対しての注意喚起をスキップ
          # ${HOST_NAME}はcircleciのホームページ側で事前に設定した環境変数が呼び出される
          # migrate --force でyes noをきかれなくしている
          command: |
            ssh -o StrictHostKeyChecking=no -t webapp@${HOST_NAME} "cd PressPlace-nginx && \
              git pull origin master && \
              cd backend && \
              composer install -n --no-dev --prefer-dist && \
              npm ci && \
              npm run production && \
              php artisan migrate --force && \
              php artisan config:cache"

workflows:
  version: 2
  build_deploy:
    # requiresでdeployの処理がbuildの処理が終わっていなければ実行されないようにしている
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
